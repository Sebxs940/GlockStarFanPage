---
export const prerender = false;

import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import { createRecuerdo, uploadImage } from '../lib/supabase';

// Manejar el envío del formulario
let mensaje = '';
let tipo = '';

if (Astro.request.method === 'POST') {
  try {
    // Verificar que la solicitud tenga el Content-Type correcto
    if (!Astro.request.headers.get('content-type')?.includes('multipart/form-data')) {
      throw new Error('El Content-Type debe ser multipart/form-data');
    }
    
    const formData = await Astro.request.formData();
    const titulo = formData.get('titulo')?.toString().trim();
    const descripcion = formData.get('descripcion')?.toString().trim();
    const imagenFile = formData.get('imagen_file');
    
    // Validar los datos
    if (!titulo || !descripcion) {
      mensaje = 'Por favor, completa los campos obligatorios.';
      tipo = 'error';
    } else {
      let imagen_url;
      
      // Si se subió una imagen, procesarla
      if (imagenFile && imagenFile instanceof File && imagenFile.size > 0) {
        try {
          const filePath = `${Date.now()}_${imagenFile.name}`;
          console.log('Subiendo imagen:', imagenFile.name, 'tipo:', imagenFile.type);
          
          imagen_url = await uploadImage(imagenFile, filePath);
          if (!imagen_url) {
            throw new Error('No se pudo obtener la URL de la imagen');
          }
        } catch (error) {
          const errorMessage = error.message || '';
          if (errorMessage.includes('credenciales')) {
            mensaje = 'Error de configuración: Las credenciales de Supabase no están configuradas correctamente.';
            tipo = 'error';
            return;
          } else if (errorMessage.includes('conectar')) {
            mensaje = 'Error de conexión: No se pudo conectar al servidor de Supabase.';
            tipo = 'error';
            return;
          }
          console.error('Error al subir la imagen:', error);
          throw new Error(`Error al subir la imagen: ${errorMessage}`);
        }
      }
      
      try {
        await createRecuerdo({
          titulo,
          descripcion,
          imagen_url
        });

        mensaje = '¡Recuerdo creado con éxito!';
        tipo = 'exito';
      } catch (error) {
        console.error('Error al crear el recuerdo:', error);
        const errorMessage = error.message || '';
        
        if (errorMessage.includes('credenciales')) {
          mensaje = 'Error de configuración: Las credenciales de Supabase no están configuradas correctamente.';
        } else if (errorMessage.includes('conectar')) {
          mensaje = 'Error de conexión: No se pudo conectar al servidor de Supabase.';
        } else {
          mensaje = `Error al crear el recuerdo: ${errorMessage}`;
        }
        tipo = 'error';
      }
    }
  } catch (error) {
    console.error('Error al crear el recuerdo:', error);
    mensaje = 'Ocurrió un error al crear el recuerdo. Por favor, intenta de nuevo.';
    tipo = 'error';
  }
}
---

<Layout title="Subir Recuerdo - GlockStarFanPage">
  <Navbar />
  
  <main class="min-h-screen py-12 bg-gradient-to-b from-secondary to-gray-900">
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
      <h1 class="text-4xl font-bold text-white mb-8 text-center">
        Subir un <span class="text-primary">Recuerdo</span>
      </h1>
      
      {mensaje && (
        <div class={`p-4 mb-6 rounded-lg ${tipo === 'exito' ? 'bg-green-800 text-green-100' : 'bg-red-800 text-red-100'}`}>
          {mensaje}
        </div>
      )}
      
      <div class="bg-secondary border border-primary rounded-lg p-8 shadow-lg">
        <form method="POST" class="space-y-6" enctype="multipart/form-data">
          <div>
            <label for="titulo" class="block text-white font-medium mb-2">Título *</label>
            <input 
              type="text" 
              id="titulo" 
              name="titulo" 
              required 
              class="w-full px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary"
              placeholder="Título de tu recuerdo"
            />
          </div>
          
          <div>
            <label for="descripcion" class="block text-white font-medium mb-2">Descripción *</label>
            <textarea 
              id="descripcion" 
              name="descripcion" 
              required 
              rows="5" 
              class="w-full px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary"
              placeholder="Describe tu recuerdo..."
            ></textarea>
          </div>
          
          <div>
            <label for="imagen_file" class="block text-white font-medium mb-2">Imagen (opcional)</label>
            <input 
              type="file" 
              id="imagen_file" 
              name="imagen_file" 
              accept="image/*"
              class="w-full px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary"
            />
            <p class="text-gray-400 text-sm mt-1">Selecciona una imagen de tu galería para tu recuerdo</p>
          </div>
          
          <div class="flex justify-end space-x-4">
            <a 
              href="/recuerdos" 
              class="px-6 py-2 border border-primary text-white rounded-lg hover:bg-primary hover:text-white transition duration-300"
            >
              Cancelar
            </a>
            <button 
              type="submit" 
              class="px-6 py-2 bg-primary text-white rounded-lg hover:bg-purple-800 transition duration-300"
            >
              Guardar Recuerdo
            </button>
          </div>
        </form>
      </div>
    </div>
  </main>
  
  <Footer />
</Layout>

<style>
  /* Estilos adicionales para mejorar la apariencia del formulario */
  input::placeholder, textarea::placeholder {
    color: #6b7280;
  }
  
  input:focus, textarea:focus {
    border-color: #800080;
  }
</style>